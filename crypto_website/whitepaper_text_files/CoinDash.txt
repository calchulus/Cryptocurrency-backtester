Unstoppable D ata for Unstoppable Apps: D ATAcoin b y Streamr
July 2 5th, 2 017 Version 1 .0
This whitepaper i s for information o nly a nd does not constitute a n o ffer or any kind of i nvestment advice. A ny e lement o f t his whitepaper m ay u ndergo s ignificant changes a s the p roject f urther develops.

Streamr vision
Streamr d elivers u nstoppable d ata to unstoppable applications. It i s the real-time data backbone of the g lobal supercomputer. It i s a decentralized n etwork f or s calable, l ow-latency, untamperable data delivery a nd persistence, operated by t he D ATAcoin t oken. A nyone -- or anything --  c an publish new d ata to data s treams, and o thers can subscribe t o t hese s treams t o power Ðapps, s mart contracts, microservices, and intelligent d ata pipelines.
To incentivize u ser p articipation in the n etwork, t here's a b uilt-in m echanism for d ata monetization. Valuable data from s ecurity exchanges, connected devices, IoT sensors, and social m edia can be offered t o companies, developers, a nd p rivate citizens. Machines c an autonomously sell t heir d ata, get paid, and purchase the d ata they r equire. A  global m arket for real-time d ata e merges, w ith built-in data p rovenance, encryption, and a ccess control.
Alongside t he d ecentralized d ata n etwork a nd marketplace, t he full Streamr s tack i ncludes a powerful analytics engine a nd a UI f or r apid development of r eal-time Ð apps. D ata streams, smart c ontracts, and d ecentralized c omputing r esources can be interconnected in a l ow-code environment u sing h igh-level building blocks. Streamr will be the e asiest p lace t o create real-time, d ata-driven, a nd trustworthy b lockchain applications.
A r evolution i s t aking place where c entralized c loud services a re one by o ne b eing s uperseded by tokenized, decentralized solutions. Golem, for e xample, replaces A zure Virtual M achine, and IPFS replaces Azure Blob S torage. Streamr is p roud t o join t he revolution b y p roviding a decentralized solution to messaging and e vent processing, replacing platforms such as A zure EventHub a nd Azure S tream Analytics.
1

1. Background
Real-time d ata will increasingly t urn into a c ommodity i n t he c oming y ears. Huge v olumes of timestamped data i s being generated b y sensors and connected d evices in manufacturing, the service sector, and the entire supply c hain w hich u nderlies t he modern economy, w ith m uch of the data generated in a s treaming fashion1,2.
The amount o f data i s increasing exponentially along t he growth of I oT and the ubiquity o f connected d evices. I n t he g lobal I oT market, I HS Markit forecasts3 that the installed base will grow f rom 1 5.4 billion d evices i n 2 015 to 30.7 b illion devices in 2 020 a nd to 7 5.4 billion in 2025. Much o f the newly generated d ata is valuable: It c an be u sed t o optimise manufacturing operations, track assets w ith i ncreasing a ccuracy, target existing c onsumer s ervices w ith high granularity, a nd c reate e ntirely n ew services and b usiness m odels.
At the same t ime, t here i s a  m egatrend i n motion t owards the n ext g eneration of t he c omputing stack. In a  distributed future, the backend c ode o f decentralized a pps --  or Ð apps4 -- r uns i n peer-to-peer n etworks. E thereum is a Ðapp i n i tself, s o is G olem, and t here are m any m ore i n development.
However, Ðapps do n ot run i n i solation: They n eed external d ata t o f unction. A s i t i s, storage and d istribution o f r eal-world data r emain centralised, a nd Ðapps remain l iable to all t he k nown problems: C oncentration of p ower, l ack o f r obustness, and vulnerability to c yber a ttacks.
To be s ure, y ou can a lready store data in t he blockchain. There a re a lso d ecentralized f ile storage apps such as I PFS, S warm, a nd S torj, and d atabases like B igchainDB a re s tarting t o emerge. W hile such s olutions are s urely p art o f the new decentralized fabric, t hey don't really provide a n answer to c ases where r eal-time data is needed i n any significant volumes. The chain i s n ot d esigned for h igh t hroughput or low l atency, i t does n ot scale, and storage is expensive.
What i s needed is a  natively d ecentralized data b ackbone a s a complement to decentralized apps. T his real-time data b ackbone w ill b e t he missing l ink, and the link t hat w e w ant t o help provide. T he infrastructure w e c reate c onsists of a t echnology s tack w hich helps c onnect a nd
1 S usan O 'Brien: " 5 Big Data Trends Shaping the F uture o f Data-Driven Businesses", D atameer, 1 1 May 2 016 (https://www.datameer.com/company/datameer-blog/5-big-data-trends-shaping-future-data-driven-businesses/) 2 T ony B aer: "2017 Trends to W atch: Big D ata", O vum, 21 November 2016 (https://ovum.informa.com/~/media/Informa-Shop-Window/TMT/Files/Whitepapers/2017_Trends_to_Watch_Big_Data .pdf) 3 Sam L ucero: "IoT P latforms: enabling the Internet o f T hings", IHS Markit, M arch 2 016 (https://cdn.ihs.com/www/pdf/enabling-IOT.pdf) 4 F or a definition of Ðapps, see Johnston e t al.: T he General Theory of D ecentralized A pplications (https://github.com/DavidJohnstonCEO/DecentralizedApplications)
2

incentivise c omputers i n a  g lobal p eer-to-peer (P2P) network. T his i s a network w hich provides low-latency, r obust and secure data delivery a nd persistency, and a ll a t scale. Ð apps of t he future a re fuelled b y data, a nd our m ission i s to m ake s ure that t he d ata k eeps o n f lowing.
We also create a  m arket f or r eal-time d ata. In the data m arket, anyone can p ublish e vents t o data streams, a nd a nyone can s ubscribe to streams and use t he data i n d ecentralized apps. Much of t he data is f ree, but w here that's not the c ase, t he t erms o f use a re stored in E thereum smart contracts. A  d igital t oken --  a D ATAcoin --  is needed t o access a nd operate t he d ata market, a nd to compensate nodes i n the  P 2P network. S ubscribers pay f or t he d ata with the token, a nd d ata p roducers a nd n etwork participants a re r eimbursed automatically a nd s ecurely.
Our stack i s b uilt on a  decentralized transport layer. Apart f rom greater r obustness, r esilience and fault t olerance, d ecentralization facilitates openness, transparency, and c ommunity building. The power o ver data is n ot with l arge c orporations l ike G oogle, Amazon, Microsoft, a nd IBM. The n etwork c onsists o f a multitude o f data producers, data consumers, a nd m essage b roker nodes in-between. You m ake a reputation f or yourself a nd earn g ood k arma by contributing to data exchange and b y h elping run t he n etwork t o e veryone's benefit.
We believe t hat sustained growth of t he blockchain community will be f acilitated by having a good u sability layer i n p lace. Tools are n eeded so t hat n on-experts c an c reate s ecure s mart contracts, and c onnect t hose contracts and Ð apps t o r eliable d ata sources. W e will help build the required toolkit by p roviding a visual editor, wrappers, a nd t emplates. In s hort, w e w ant to be the p lace to g o f or a nyone w ho's i n t he business of c reating data-driven decentralized services.
In t he r est o f this p aper we d escribe the Streamr t echnology s tack, define the r ole o f t he d igital token, explain t he s tatus quo, present the R &D r oadmap, and introduce t he t eam.
2. Streamr stack
The d ecentralized real-time data p ipeline is b uilt o n t op of a multi-layered technology stack:
 Streamr Editor c onstitutes a  u sability l ayer and toolkit w hich enables rapid d evelopment of decentralized, d ata-driven a pps.
 Streamr Engine i s a  high-performance e vent processing and analytics engine that executes off-chain i n a decentralized f ashion. I t c an run o n a d ecentralized c omputing provider such a s Golem.
 Streamr D ata M arket is a universe o f shared d ata s treams w hich a nyone c an c ontribute and subscribe t o.
 Streamr Network is the d ata transport layer, defining an i ncentivized peer-to-peer network f or messaging in the d ecentralized data pipeline.
3

 Streamr Smart Contracts e nable n odes i n t he S treamr n etwork to reach c onsensus, hold s tream m etadata, h andle p ermissioning a nd integrity c hecking, and facilitate s ecure token t ransfers.
The f ollowing section g oes t hrough e ach l ayer o f the s tack (see F igure 1 ) in d etail, f ollowing a top-down approach.
Figure 1. S treamr t echnology s tack. 2.1 Streamr Editor
Streamr E ditor enables r apid development of data-driven smart contracts, l owers the t hreshold for Ðapp creation, a nd c omes with ready-made templates f or common u se c ases built in. There i s c onsiderable i nterest in the blockchain and d ecentralized applications w ithin t he business c ommunity, b ut the number o f r eal-life u se cases remains limited. These are the early days, and i t i s n ot u nreasonable t o p ostulate t hat m any of t hose w ho want t o g et involved a re not d eep experts i n t he minutiae o f Ethereum, Solidity, e ncryption, d ata provenance, a nd o ther technical i ssues.
4

In our view, t he c ommercial growth of t he e cosystem requires t ools which a llow n on-experts to set u p smart c ontracts, c onnect t o trusted data s ources, make u se o f s ecure o ff-chain modules for d ata f iltering, aggregation, a nd refinement, deploy d ecentralized a pplications, track s mart contract e xecution, a nd v isualise the flow of i nput d ata a nd blockchain events. We a ddress t he need f or a  u sability l ayer by providing powerful tools ( such as an e asy-to-use visual e ditor), w rappers, and s mart contract t emplates which a re targeted a t d omain professionals and business u sers. T hese t ools h ide t he deep t echnology under t he hood, handle the d ata integrations and communications, and a utomate the routine steps in the deployment and m onitoring o f s mart contracts. We foresee an ecosystem where t here a re s everal u sability platforms and tools a vailable. The existing Streamr platform already implements some elements of the usability l ayer, with m ore functionality b eing a dded in t he c oming months a nd years. T he aim is t o r each a  s tage where you can b uild and d eploy a  useful and f unctioning data-driven smart c ontract i n minutes. T his is more than a fantasy; o ur demo i n E DCON5 P aris i n F ebruary 2 017 is a  taster o f what c an already b e done ( see Figure 2  for an illustration).
Figure 2 . An alpha v ersion o f t he Streamr editor w orkspace. These are s ome of t he planned f eatures f or t he usability layer:
5 H enri P ihkala: " Connecting E thereum with the real w orld: How t o e asily create data-driven smart c ontracts", European E thereum Development Conference ( EDCON), P aris, 17-18 F ebruary, 2017 (https://www.youtube.com/watch?v=C1l0rcj-Fok)
5

 A visual editor f or c reating s mart contracts, f eeding i n r eal-world data, a nd c onstructing off-chain data processing pipelines.
 Modules for c ommunication with s mart c ontracts and i nteracting w ith t he blockchain.  Modules f or off-chain processing: D ata f iltering, r efinement, a nd aggregation,
deployment o f decentralized a pplications, t racking s mart contract execution, a nd visualising the f low of input d ata and blockchain events.  A S olidity editor where the s mart c ontract c ode c an b e w ritten and modified in a context-sensitive environment.  Built-in and tested open source Solidity t emplates f or d ifferent use c ases of Ethereum smart c ontracts.  Playback f unctionality for s imulating s mart contract f unctionality, d ebugging contract code, and t esting functionality b efore deployment.  One-click deployment to s ubmit a  smart c ontract i n either a testnet or in the mainnet.
2.2 Streamr Engine
Streamr E ngine i s t he h igh-performance a nalytics e ngine t hat executes o ff-chain within a decentralized c omputing p rovider (e.g. i n a  D ocker c ontainer on Golem).
Figure 3 . Typical d ata f low p attern and o utcomes for t he S treamr analytics e ngine. Ðapps, u sually w ith web-based UIs and smart c ontract-based b ack-ends, c urrently h ave no way to process raw data and turn i t into i nformation. A g roup o f IoT s ensors or t he stock m arket might p roduce thousands o r e ven millions of e vents per s econd, a q uantity impossible o r far too expensive to p ush onto any b lockchain for computation.
6

A s treaming analytics l ayer i s needed to turn r aw d ata into refined information and ready for consumption b y Ðapps a nd s mart contracts. R aw d ata m ay need t o b e f iltered, downsampled, aggregated, c ombined with other data, r un through anomaly detection a lgorithms, or processed by a dvanced m achine l earning a nd pattern recognition m odels. O r y ou m ay w ant to do t hings which simply cannot be d one in s mart contracts, s uch a s c alling e xternal A PIs as part of t he processing chain.
The S treamr E ngine l istens t o events on t he S treamr Network, and models b uilt using t he Streamr E ditor r efine incoming d ata a nd react t o new e vents i n real t ime. There are many ways to react, including the following:
 Publishing r efined data i n another stream i n t he Streamr N etwork, perhaps shown in real-time by a  Ð app U I also connected t o t he n etwork.
 Interacting w ith a n IoT device, for example controlling a n actuator, o pening a  lock, turning the l ights o n, or c alling t he elevator.
 Sending a n alert via email o r push n otification.  Calling a f unction i n a s mart c ontract.
Using t he S treamr N etwork a s messaging g lue between Ðapps and off-chain computation on the E ngine enables a w hole new category of decentralized apps: apps driven by non-trivial data volume. Obviously, t he results c an a lso be c onsumed b y t raditional c entralized apps, while s till enjoying the benefits o f decentralized m essaging a nd analytics.
2.3 Data M arket
Streamr d ata market i s a global u niverse o f shared data s treams w hich a nyone can c ontribute a nd s ubscribe to. It's a  place for data m onetisation a nd machine-to-machine (M2M) d ata exchange. T he data market supports anonymity, but allows f or t he verification o f digital i dentity w here r equired.
The data m arket i s a meeting p lace for data p roducers and data consumers. Data consumers find value in t he d ata o ffered, and wish t o a ccess it i n o rder t o use i t as i nput for Ðapps, s mart contracts, or t raditional apps.
The data is organised i n d ata s treams, t he b asic b uilding b lock of the d ata market a nd a primitive i n t he S treamr Network (see C hapter 2 .4 b elow). D ata s treams contain e vents f rom data s ources t hat k eep e mitting n ew data points a t e ither r egular or i rregular i ntervals. Here are some typical settings where r eal-time d ata i s produced in a  streaming fashion:
7

 A stock m arket g enerates a  new e vent e very t ime t here i s a  n ew b id o r o ffer, and e very time a t rade t akes place.
 A p ublic transport v ehicle b roadcasts its i dentity, s tatus, s peed, a cceleration, geolocation, a nd h eading e very f ew s econds.
 A motion d etector transmits a s ignal when a moving object is detected in i ts range.  IIoT s ensors a ttached t o a n electrical d rive m easure the t emperature, speed, a nd
vibrations d uring the d rive operation i n a  smart factory.  Air quality s ensors measure carbon m onoxide, s ulfur dioxide, nitrogen dioxide, and
ozone l evels i n a n urban a rea.  Seismometers m easure ground m otion in a n a rea w ith volcanic activity.  Smart c lothing worn b y p rofessional athletes c ollects biometric d ata s uch a s t he
heartbeat, t emperature, and a cceleration.
The data market makes a  wide s election of trustworthy t imestamped d ata a vailable f or subscription. S ome of the data i s s ourced from e stablished and p rofessional data vendors and redistributors, and s ome from p ublic, open data s ources. I mportantly, t he platform allows anyone t o c ontribute a nd monetize their d ata. W hilst c ompanies h ave v aluable data streaming in f rom sensors and d evices, p rivate citizens are producing valuable information t oo.
For e xample, people wearing a  smartwatch m ight place their h eart r ate d ata o n sale o n t he d ata market. D ata can be o ffered a nonymously, s o privacy is n ot v iolated. Who w ould b e interested in such data? W ell, a  pharmaceutical c ompany might b uy i t for research, o r a public h ealthcare organization might use it t o f ind o ut how o ften p eople d o s ports, or what the s tress l evel o f the public i s. A  s martwatch manufacturer might buy i t t o g et d iagnostics o n h ow their heart rate sensors perform. And t he data p roducers e arn d aily income j ust b y m aking t heir data available.
There i s no reason w hy subscriptions i n the d ata m arket s hould be initiated by h uman s oftware developers, d ata e ngineers, o r data s cientists. In fact, t he d ecentralized m arket may well end up being dominated by m achine-to-machine t ransactions. Autonomous machines, robots, s mart appliances will all n eed d ata in their operations, and they a re producing d ata which i s v aluable to o ther p articipants in t he e cosystem.
Automatic, value-adding refinement patterns w ill e merge. An AI m ight s ubscribe to a r aw stock market feed, a pply proprietary pattern r ecognition t o g enerate trading signals, a nd offer those signals for sale on the s ame data m arket.
Whilst much o f the content in t he d ata market w ill be f reely available f or a ll, t here w ill b e d ata that needs to be p aid f or, and there will b e data w here a n end u ser license a pplies. I n s uch cases, a  s ubscription l icense i s n eeded. A  l icense g ives the right to a ccess t he data f or a specific p eriod of time, on c ertain conditions, and for a  fee. There's a c lose analogy to s treaming music: You don't g et to o wn t he subscribed data, a ny more t han y ou get t o o wn the rights to a song b y hearing it o n S potify o r b y downloading i t f rom i Tunes.
8

Data l icenses are i mplemented a s smart contracts ( see S ection 2.5.4). The g reat b enefit o f t he blockchain i s t hat i t offers a  trustless a nd d ecentralized w ay to store the t erms of u se a nd t he access rights, and to ensure t hat d ata p ayments are m ade a s agreed. In a w ider context, t here's potential for a  p owerful network e ffect i n the m arketplace. The more content there i s, t he more a ttractive t he p roposition b ecomes for both data contributors and t o data consumers. I n S treamr data market, a w eb portal (implemented a s a  Ðapp) facilitates the discovery o f what d ata exist out there, provides a  c omprehensive t oolkit for the c reation a nd management of data s treams, a nd m akes i t e asy to subscribe to d ata streams o f c hoice.
2.4 Streamr Network
Streamr N etwork is the d ata transport l ayer i n the technology s tack. It c onsists o f Streamr Broker n odes w hich establish a  P2P n etwork. T he n etwork h osts a publish/subscribe mechanism and s upports d ecentralized s torage of events. T he network throughput s cales linearly with t he number of participating nodes, a nd i t can p rocess m illions o f e vents per second.
Figure 4. A n e xample of a n event t raveling t hrough the broker n etwork f rom a data s ource t o a subscriber Ð app. The S treamr N etwork (Figure 4 ) is a  transport layer of the S treamr s tack. T he n etwork handles all m essaging in the decentralized d ata pipeline. T he l ayer c onsists o f p rimitives ( events a nd streams) and b roker n odes. T he b roker nodes o perate on the primitives, and t he c ollection of broker nodes c onstitutes t he P2P n etwork which handles decentralized storage and decentralized m essaging.
9

The i nfrastructure layer u ses the underlying E thereum s tack for i ts o perations. N ode coordination requires robust consensus, w hich i s i mplemented through s mart contracts. The raw event d ata itself usually d oesn't g o into the b lockchain, w hich t ogether w ith p artitioning a llows the S treamr Network to scale to millions o f events p er second a nd h igher.
The S treamr N etwork c ombines the b est parts o f s calable c loud-based r eal-time d ata t ransports (e.g. K afka, Z eroMQ, A ctiveMQ) and what's available in t he decentralised P 2P/crypto community ( Whisper6, B itmessage7). The c loud-based f rameworks use e fficient s harding and persistence schemes t o r each high t hroughput, but only i n a  t rusted local network environment. The peer-to-peer protocols s howcase e ffective s trategies for r outing, peer discovery, NAT traversal, location obfuscation, and s o on, but fail to d eliver t he t hroughput needed for data intensive r eal-world a pplications.
2.4.1 Events
An e vent8 is a  timestamped p iece o f i nformation. E very event c ontains headers and c ontent. The h eaders specify the m etadata f or t he event, such as its t imestamp, o rigin, a nd content t ype. The event p rotocol supports a rbitrary t ypes and formats of c ontent payload, e .g. J SON messages or binary images. T he content type i ndicates w hat f ormat the c ontent i s i n. E vent headers a nd c ontent a re encoded i n a  binary format for t ransmission.
All e vents on t he S treamr network a re cryptographically s igned. All events h ave a n o rigin, f or example an Ethereum a ddress. A  s ignature is calculated f rom a p rivate k ey a nd t he rest o f the message. The signature i s u sed t o prove t he m essage o rigin a s w ell a s t he message integrity. Since t he e vent format a llows for a ny kind of o rigins and signatures, the s ystem is future-proof.
The f ollowing table l ists the information contained in an e vent.

Field version stream partition timestamp contentType encryptionType

Description Version of t he e vent protocol Stream id ( Ethereum address o f the s tream smart c ontract) Stream partition (see s ection on partitioning) Event timestamp (ISO 8 601) Instruction o n h ow t o p arse the b ody (e.g. JSON) Encryption algorithm u sed t o e ncrypt t he c ontent

6 Gav Wood: "Whisper P oC 2  P rotocol Spec" (https://github.com/ethereum/wiki/wiki/Whisper-PoC-2-Protocol-Spec) 7 See https://bitmessage.org/wiki/Main_Page. 8 Streamr events s hould n ot b e confused with e vents in Ethereum s mart contracts.
10

content originType origin signatureType signature

Data payload Instruction how to i nterpret the o rigin Data o riginator Instruction on how t o interpret t he s ignature Cryptographic signature proves origin and i ntegrity o f m essage

2.4.2 S treams
All events b elong t o a stream. T here c an be any number of s treams, e ach of w hich g roups together events that a re logically r elated a nd stored i n a n a scending c hronological o rder. Stream m etadata i s s tored i n a n E thereum s mart contract. Each stream is i dentified b y the Ethereum a ddress o f t he c ontract. For scalability, events ( i.e. the actual d ata p oints) are n ot stored i n smart c ontracts o r i n t he b lockchain.
A data stream h olds a set of p ermissions. The p ermissions control who c an read e vents f rom the stream ( subscribe), a nd who can w rite n ew events t o t he stream (publish). T he stream owner c ontrols t he p ermissions, b ut she can also g rant o r delegate t he permission c ontrol to third p arties w here n eeded.
The following t able l ists the m etadata for a  s tream.

Field id name description owner permissions

Description Stream i d ( Ethereum a ddress) Stream n ame Stream d escription Stream o wner A mapping from E thereum a ddress t o permission levels

2.4.3 Publish/Subscribe
Data delivery in t he n etwork f ollows the publish/subscribe paradigm9. Events p ublished to a stream are promptly d elivered t o a ll authorized and c onnected s ubscribers o f the s tream.

9 W ikipedia: Publish/subscribe p attern (https://en.wikipedia.org/wiki/Publish-subscribe_pattern) 11

Subscribing t o s treams c an b e r estricted t o c ertain users only, or be free t o the p ublic. S imilarly, the p ermission to p ublish c ontent t o a stream can be h eld b y o ne, m any, o r e veryone.
The publish/subscribe p aradigm e nables m any messaging topologies used i n real-world applications:
 One-to-many (for e xample, a  n ews channel o r s tock ticker)  Many-to-many (for example, a  g roup c hat o r a  m ultiplayer game)  One-to-one (for e xample, a private chat o r an analytics pipeline)  Many-to-one ( for example, a  v oting s ystem)
Note t hat p ublishing an e vent n eed not i mply t hat t he event i s d elivered t o a ny c lients: It may be the case that there a re n o s ubscribers. S till, t he e vent i s p ersisted and d elivered t o a  n umber o f broker n odes for redundancy.
Technically, t here a re t wo t ypes of subscribers. The majority of the d ata flow g oes to subscribers connected to the network v ia a d irect connection t o a broker n ode ( see S ection 2.4.4. below). T hey c an b e, f or e xample, web front-ends o f Ðapps, event p rocessing c hains running on S treamr Engine, or IoT d evices controlled by data f rom the n etwork.
Smart contracts a re a s pecial t ype o f s ubscriber supported by the S treamr N etwork. B roker nodes i n t he network a re incentivized to d eliver e vents t o s ubscribing s mart c ontracts. In this scenario, o f c ourse, b lockchain s calability limits a pply. T he mechanism allows t he n etwork t o act as a n oracle, meaning that d ata c an be p ushed t o smart c ontracts w ithout h elp from a  3 rd party oracle. S ince a ll d ata in t he network is signed a t t he source, i t can a lways be v erified a nd trusted.
2.4.4 Broker node
The Streamr B roker n ode is t he core software c omponent in t he n etwork. A b roker node handles t asks s uch as p ublishing events, subscribing to s treams, handling s torage, and communicating with Ethereum n odes v ia JSON RPC c alls. T he b roker n ode exposes i ts functionality to connected a pplications via APIs.
The broker API c an be used from apps u sing s tandard HTTP a nd Websocket libraries in a ny language. For e ase of use, we'll p rovide r eference i mplementations i n a n umber of l anguages. The p rimary client l ibrary p latform w ill be written in JavaScript. It c an be used t o deliver d ata to web-based Ðapps running in t he b rowser as w ell a s t o b ack-end a pplications running node.js. A Websocket API handles e vent delivery f rom data sources to t he network and from t he network to c lient Ðapps. For stream m anagement, a  J SON A PI is used.
The W ebsocket s treaming API t akes care o f the following t asks:
12

 Authenticate a  session  Publish events  Subscribe t o events in streams  Deliver e vents to s ubscribed c lients  Query historical events in streams
The JSON A PI exposes the f ollowing f unctionality:
 Create a stream  Configure a stream  Delete a stream  Get i nfo about a s tream  Find s tream(s) b y s earch criteria  Publish events ( alternative t o Websocket API)  Query h istorical e vents i n s treams (alternative t o Websocket API)
Most of the traffic b etween brokers c onsists of e vent m essages, but there is also t raffic r elated to routing and peer discovery. An important c oordination task between b rokers is p artition assignment, in w hich a r eliable consensus must be a chieved. T his mechanism is implemented as a smart contract w hich l everages t he power o f the E thereum network (see S ection 2 .4.5 below).
2.4.5 P artitioning (sharding)
Event traffic i n t he w hole network is d ivided i nto i ndependent p arts called partitions. Each b roker node handles t he t raffic b elonging to a  s et of p artitions. T his i s how scalability i s achieved: not all nodes h andle all the t raffic. This is similar t o the partitioning s cheme f ound in e .g. A pache Kafka.
The p artition for a p articular event is calculated by h ashing the s tream id. This i s a  f ast o peration and done l ocally. Using the s tream i d as t he p artition key means that a ll e vents i n a particular stream a lways g o to t he s ame p artition. T his allows the network t o m aintain the o rdering of events w ithin a  stream, a nd t o store them e fficiently.
It may happen that a s tream r eceives such a  v olume of m essages that a single broker c annot handle them. In t his case, an another round o f partitioning i s a pplied t o the s treams t hemselves, and t he t raffic w ithin a s tream is split t o independent p arts. In t his c ase, w e hash t he (stream id, stream partition) tuple t o assign t he n etwork p artition, and t he p ublisher p rovides the p artition key w hich assigns the e vent t o a  p artition w ithin t he s tream. T he order of events f or a  stream partition k ey i s p reserved.
The number o f partitions in t he n etwork remains constant u ntil a utomatically incremented over time. A s d escribed i n the n ext s ection, there is a  c oordinator smart c ontract w hich c ontrols
13

network p artitioning. T he n umber of p artitions is proportional to the n umber of b roker nodes participating in the n etwork.
2.4.6 Node c oordination
In distributed d ata s ystems such as A pache Kafka and A pache C assandra, node c oordination is usually a chieved b y using a component like Apache Z ookeeper. There i s a  centralized process for e stablishing c onsensus i n p rocesses like leader election. A lternatively, some s ystems use manual assignment of c oordinator nodes which have special privileges in t he network.
In a d ecentralized n etwork, such c entralized o r p rivileged components c annot exist. Instead, the Streamr network uses the u nderlying Ethereum network to establish consensus for n ode coordination i n t he P 2P network.
The key coordination t ask i s t he assignment o f n etwork partitions t o broker nodes in the network, and t he m aintenance o f changes i n t his information w hen nodes appear or disappear. Instead of a centralized c omponent like Zookeeper, t his t ask is implemented b y a smart contract: t he n etwork coordinator. T he n etwork coordinator c ontract is deployed o n t he Ethereum blockchain. Broker nodes find out the current n etwork s tate b y w atching a nd querying the s mart contract. U pgrading t he n etwork is a chieved s imply by s witching to a n ew n etwork coordinator c ontract.
Rebalancing t he partition a ssignments i s one of the tasks of t he n etwork c oordinator contract. Only u seful c hanges a re made, and if there a re none, t he function does nothing. W hen the network is unbalanced, calling the f unction a wards DATAcoin to t he caller. This i ncentive ensures t hat network rebalancing takes p lace w hen n eeded.
The n odes a ssigned to a partition receive all t he data f or that p artition. S ome o r all of them calculate rolling c hecksums o n the data, a nd report t he checksums to the n etwork c oordinator smart c ontract a t certain i ntervals. I n a  large p ublic network, there are enough n odes for e ach partition to m ake i t d ifficult f or t hem t o collude. Partition a ssignment b y the network c oordinator smart contract i s a lso d ifficult to i nfluence.
2.4.7 I ncentivization
Subscribers are the c onsumers o f d ata in t he n etwork. DATAcoin, the n etwork's usage token, enables s ubscribers t o s ubscribe to s treams. O ther parties gain D ATAcoin b y contributing to the network: the broker nodes ( the "miners" o f t his n etwork), a nd t he d ata p ublishers.
Broker n odes are i ncentivized t o d o two t hings: report c hecksums f or their a ssigned p artitions to the network coordinator smart contract (see S ection 2.4.6. a bove), a nd d eliver data to a ny smart contract s ubscribers ( see S ection 2.4.3). B oth o perations cost some Ethereum g as, p aid by the broker. T his cost i s c overed b y D ATAcoin the b rokers receive for making the n etwork function.
14

Figure 5. A  s chematic d iagram o f t he incentive s tructure in the Streamr N etwork.
Checksums for a partition are c alculated a nd reported by multiple b roker n odes, and t he b rokers are rewarded only if the b rokers a gree o n the checksums o n a  c oherence threshold set in the coordinator smart contract ( for e xample, 9 0% of assigned brokers n eed t o report a  particular checksum for it t o be c onsidered valid). If a  n ode reports deviant c hecksums, n one a t all, or the checksums a re n ot c oherent, n o r eward is obtained a nd o ffending nodes b ecome l ess likely to be a ssigned r esponsibility f or a  p artition i n t he f uture.
As d iscussed, smart c ontracts c an be subscribers t o a stream. The s ubscriber s ets a  b ounty i n DATAcoin for d elivering e vents to t he smart contract. T he b ounty is collected b y w hoever delivers t he data f irst. Usually this would be t he broker n ode d irectly c onnected t o the publisher, as that b roker i s i n a forerunner p osition t o m ake the d elivery. O ther nodes o r external subscribers may w atch this process and identify o pportunities t o d eliver the data, i f n ot delivered by t he usual s uspect.
A mechanism i s also needed to p revent flooding in t he network. A  m inimal c ost must be associated with all publish o perations a s w ell as d eliveries to s ubscribers. T he n etwork can aggregate the costs a nd commit e very now a nd t hen to the underlying b lockchain for s calability, similar t o how state channels or m icropayment channels work in some b lockchain n etworks.
2.4.8 E vent persistence
Events in d ata streams are p ersisted i n t he peer-to-peer n etwork. T his e ffectively t urns the network i nto a d ecentralized t ime series d atabase. The d ecentralization brings in a number o f
15

advantages, including g reater r obustness, f ault t olerance, lower c ost, and the p otential for anonymity.
With streams being s equences o f e vents, the simplest f orm of s torage i s a n event log. An e vent log c an be stored i n any b lock storage, s uch a s a  f ile s ystem o n t he nodes t hemselves, o r decentralised o bject s torage s uch a s Swarm10, IFPS11 o r S torj12.
For storage w ith much more g ranularity and q uerying f eatures, d ecentralized d atabases s uch as BigchainDB13 a re emerging. A  solution l ike this i s a l ikely candidate f or event storage in t he Streamr N etwork. However the l andscape is changing r apidly, a nd w e won't c ommit t o a  specific storage s olution a t this t ime.
2.4.9 D ata p rovenance
Security a nd data p rovenance are c ritical issues whenever e xternal data i s u sed as inputs to Ðapps a nd s mart contracts. As b lockchain transactions a re i rrevocable, there's a  clear incentive for honest parties t o e nsure that the i nputs are trustworthy. T here is also a n i ncentive f or dishonest parties -- as well as unscrupulous h ackers --  to manipulate t he d ata f or monetary benefit.
In the S treamr network, e very d ata p oint is c ryptographically s igned b y a p rivate key o wned b y the d ata o rigin. The a rea i s undergoing r apid d evelopment, and m any d ifferent m ethods are possible. E vents c ould b e signed w ith, f or e xample, a n E thereum p rivate k ey, X .509 c ertificate owned by a n IoT sensor, t rusted hardware enclaves using t he I ntel SGX chip and t he T own Crier14 r elay, o r a  TLSNotary15 service bridging d ata from a web A PI.
By design, t he Streamr network is unopinionated on the m ethod u sed t o attest the d ata provenance, a nd it c an indeed s upport a ny m ethod a vailable now or in t he future. E vents on the network always c arry b oth t he signature i tself a s well as information o n w hich method to u se t o verify the s ignature. The c lient l ibraries which p ublish and subscribe to e vents can incrementally add support for different m ethods, a bstracting away t he inner workings o f e ach m ethod a nd making signature verification e asy from a developer's point of v iew.
10 V iktor T rón e t a l: " Introduction to Swarm" (http://swarm-guide.readthedocs.io/en/latest/introduction.html) 11 See " IPFS - T he Permanent W eb" (https://github.com/ipfs/ipfs) 12 See "Storj: A P eer-to-peer C loud Storage N etwork" ( h ttps://storj.io/storj.pdf) 13 See " BigchainDB: A S calable B lockchain Database" (https://www.bigchaindb.com/whitepaper/bigchaindb-whitepaper.pdf) 14 Fan Z hang e t a l.: "Town C rier: An A uthenticated D ata Feed f or S mart Contracts", Proceedings o f t he 2016 ACM SIGSAC Conference on Computer and Communications Security (CCS), Vienna, A ustria, October 2 4-28, 2 016, p p. 270-282 (https://eprint.iacr.org/2016/168.pdf) 15 " TLSnotary -  a m echanism for independently a udited h ttps s essions", w hitepaper, S eptember 1 0, 2 014 (https://tlsnotary.org/TLSNotary.pdf)
16

The initially supported s ignature algorithm is the s ame secp256k1 ECDSA a s is u sed by Ethereum. T his c onveniently allows t he network t o reliably map any p ublished data to a n Ethereum address.
2.4.10 D ata confidentiality
Given that anyone c an p articipate in t he S treamr n etwork b y r unning a  broker node, e vent payloads of n on-public streams i n the Streamr network are strongly encrypted u sing a symmetric key cryptography. Only p arties holding an a uthorized private k ey c an r ead the d ata. T he s tream smart c ontracts hold t he p ublic keys of whoever is allowed t o a ccess t he s tream. A t the time of publishing, the p ublic k eys o f a uthorized r ecipients a re u sed to encrypt the data so t hat o nly t he authorized recipients can access the d ata.
Multicast encryption16,17  t echniques may b e used to balance m essage size w ith k eying complexity. Built-in e ncryption support also a llows f or s traight-forward data m onetization, as services s uch as the S treamr Data Market can b e created to s ell or r ent a ccess to s tream contents. P ublishers can r ekey t he data stream to selectively deny a ccess e .g. i n case they catch s ubscribers reselling their data o utside the network.
A d ecentralized approach c ombined with encryption b rings safety: T he data i s fragmented to a number of u nknown physical locations, a nd it is p rotected b y strong encryption while i n t ransit and i n storage. T he d esign a ddresses the f ears of companies and o rganisations t hat are concerned about the p otential f or c ompromised data v ia physical a ccess to data centers a nd storage f acilities.
2.5 Streamr Smart C ontracts
A number o f E thereum smart c ontracts support t he o peration o f t he Streamr Network a nd t he D ata M arket. T he Streamr N etwork u ses s mart c ontracts f or incentivization, coordination, p ermissioning, a nd integrity c hecking. T he Data Market b uilds upon features provided b y t he Network f or d ata l icensing a nd monetization. DATAcoin, an E RC20 token, i s used b y both layers for incentivization, as a r eputation m etric, a nd a s the means o f p ayment.
16 M icciancio, D aniele and Saurabh P anjwani. " Multicast Encryption: How t o maintain secrecy i n large, dynamic groups?" ( h ttp://cseweb.ucsd.edu/~spanjwan/multicast.html) 17 D uan, Yitao a nd J ohn Canny. C omputer Science Division, U C Berkeley. "How to C onstruct M ulticast Cryptosystems Provably S ecure A gainst A daptive Chosen C iphertext A ttack" (h ttp://www.cs.berkeley.edu/~jfc/papers/06/CT-RSA06.pdf)
17

2.5.1 Stream
The s tream smart contract holds i nformation about a stream (see S ection 2.4.2). Besides holding s tatic information, i t c arries the p ermissions f or the stream. I n p articular, i t carries t he public k eys o f authorized r ecipients for e ncrypted s treams, possibly t ied to a d ata license (see below).
2.5.2 S tream registry
The stream r egistry c ontract holds information a bout k nown s treams i n the network. Streams can b e added to the r egistry for lookup p urposes. T he stream registry c an a lso r egister streams on ENS ( Ethereum n ame service).
2.5.3 N etwork c oordinator
The n etwork coordinator c ontract a ssigns p artitions t o b roker nodes (see S ection 2.4.6). Broker nodes register themselves w ith the coordinator a nd r eceive updates on t he n etwork state by watching the s mart c ontract.
2.5.4 Data license
The data l icense c ontract r epresents a product l isted i n the Streamr D ata Market. I n r eturn f or DATAcoin, the c ontract grants access t o a n a ssociated set o f streams by registering t he purchaser's public k ey with t he s treams. The data l icense can b e v alid for a  certain p eriod. After the license e xpires the b uyer w ill n o longer h ave a ccess t o new data p ublished on the s tream(s).
The raison d'être of a  l icense c ontract is to hold t he p roof t hat t he recipient has t he right to access a d ata stream on specific a nd immutable t erms of u se, and t o s imultaneously g uarantee that the data p rovider r eceives t he a greed payment for r eal-time data a s a nd when i t i s published.  T he terms of use may be stored i n the data license contract e ither d irectly ( and hashed a s needed) o r as a l ink to c ontent-addressed s torage such a s I PFS. T he c ontract may also c ontain proof a bout f ulfilled l egal r equirements such a s t he r esult o f a  know-your-customer (KYC) process.
Broker nodes report event c ounts a nd rolling h ashes t o stream smart contracts, which i n t urn can r eport t hem to t he a ssociated license contract. T he l icense s mart c ontracts c an i mplement almost a rbitrary safeguards to p revent p ublisher f raud. They m ay, for e xample, l ock the p ayment until a  c ertain a mount o f e vents have b een published on the stream. T he p ayment could a lso be made i ncrementally over t ime o r event-by-event a s they are published. There may also be a mechanism f or s ubscribers to f lag b ad d ata, n egatively affecting the p ublisher's r eputation (see Section 3  on D ATAcoin and k arma). T hese safety f eatures ensure that t he publisher cannot g et paid w ithout d elivering quality d ata a s promised.
18

3. D ATAcoin
DATAcoin is the m eans of compensation b etween d ata p roducers and consumers. I t is also a n incentive for r unning b roker nodes in t he P 2P network. DATAcoin is the b asis f or karma, t he reputation m etric i n t he community. I n a bigger p icture, it is a  w ay t o gain exposure to d ata a s a  valuable c ommodity.
Figure 6. DATAcoin flows in the opposite d irection from t he data. There's a n i ntegral r ole f or a  d igital t oken i n t he d ecentralized d ata pipeline. DATAcoin i s t he usage token of t he S treamr n etwork. D ATA is t he s ymbol of t he token.
 Maintaining and operating a  P2P n etwork t akes resources: t ime, e lectricity, computing power, a nd communication bandwidth. Incentivization o f t he participating b roker nodes are d escribed in s ection 2.4.7.
 DATAcoin is t he means of c ompensation b etween p roducers and c onsumers. I n other words, it implements a  monetization mechanism f or d ata p roducers. This is a n i ncentive for data v endors t o s tep i n and h elp grow t he community to e veryone's b enefit.
 DATAcoin i s the b asis f or k arma, the r eputation metric in t he community o f d ata producers, d ata c onsumers, and message brokers. Parties gain karma f rom D ATAcoin transactions: P ublishing data, c onsuming data, and r unning b roker n odes t hat o perate the n etwork. A  d ata producer gains karma w hen e vents s he published are d elivered t o subscribers. Subscribers e arn karma by receiving e vents. B roker n odes e arn k arma f or helping w ith d ata delivery a nd persistence. B ookkeeping i s easy: T he amount o f n ew
19

karma e quals the a mount o f D ATAcoin e xchanged. T he d ifference is that k arma d ecays and eventually expires, while t he t oken balance d oes not.
DATAcoin i s i mplemented as a n ERC20 token o n E thereum. The token s mart c ontract maintains DATAcoin balances, and e nsures that payments are handled in a  trustless a nd secure w ay. F ollowing t he ERC20 s tandard ensures i nteroperability with wallets and o ther tokens.
DATAcoin w ill b e created in a  t oken g enerating e vent ( TGE) currently scheduled for S eptember 2017. Its details, terms and c onditions, and detailed schedule w ill b e announced l ater.
4. C urrent state
There's a  h ighly advanced platform already in p lace for creating data pipelines, visualisations, a nd o ff-chain c omputing microservices. T he p latform p rovides a functional starting point, b ut t o r each full decentralization it must be r efitted to run in a decentralized c ontainer a nd use t he new Streamr N etwork layer for m essage transport.
We d o not start from s cratch. There's a f unctional a nd highly a dvanced p latform in place f or creating data p ipelines, visualisations, off-chain p rocessing, and Ethereum smart c ontracts. T he software is built f or the cloud environment with scalability, i ntegrations, and f ault tolerance i n mind. B ig d ata f rameworks l ike K afka and C assandra are used f or d ata h andling a nd messaging. T he Streamr p latform was demonstrated live i n EDCON i n February 2 017 a nd i n various b lockchain m eetups since.
As t o t he p edigree, w e created the first version o f the software for our o wn use i n algorithmic high-frequency t rading soon 5 years ago. T he principals all c ome f rom a  f inancial background, being e ither quants, t rading s ystem d evelopers, stat arb t raders, and i n s ome cases all of t he above. Q uantitative f inance i s a field where automatic processing of h igh v olumes o f r eal-time data has been t he reality for the p ast 10-15 y ears and more. It is o nly t he past f ew years w here the s ame k ind o f modus operandi and t he s ame k ind of t ools and platforms are f inding t heir way into t he world o f I oT, IoE, and now i nto the blockchain s pace.
The current platform is f unctional, s calable, a nd i n l ive use b y corporate customers. Most of the components do n ot, h owever, t ranslate directly t o t he new world. Storage needs t o be decentralized, m essaging, pub/sub f unctionality, and data monetization and encryption b uilt into the transport l ayer, and t he p eer-to-peer n etwork established a long with node c oordination a nd incentivization. T he r oadmap o f h ow to do t hese things is p resented in the n ext section.
20

5. Roadmap
Figure 7. R &D roadmap f or t he S treamr p roject. The roadmap (Figure 7 ) i s divided in t hree milestones ( M1-M3). Each m ilestone i teratively brings new f eatures into l ayers o f the stack. Each of t he three milestones consists of work packages ( WP1-WP10). C ompleting a ll W Ps i n a  m ilestone c ompletes the m ilestone. Each w ork package has a specific f ocus o n certain l ayers in t he s tack. All WPs i n a milestone will be worked o n r oughly s imultaneously, but WPs in t he next m ilestone w ill n ot b egin before the current milestone is complete. There w ill also be a  s ecurity audit at t he end of e ach milestone. All s mart contracts will be audited, a s will r elevant parts of any n on-smart contract c ode, for e xample the b roker c lient itself. We h ave chosen t he iterative f ull-stack approach o n t he f ollowing reasoning:
 We c an p rovide s omething that's w orking a nd usable to t he c ommunity f rom day o ne.  We are s tarting with a n existing t echnology stack. The stack i s m odular so t hat a ny
layers c an be upgraded a t a ny point a long the road.
21

 Tangible and useful deliverables will be achieved r egardless o f which m ilestones w e reach. The c ommunity won't b e left high and d ry with a h alf-way solution; there w ill be functional t echnology that fulfils m any b usiness u se cases.
5.1 Milestone 1
Milestone 1  r eleases the f irst version of the incentivised data d elivery network and t he underlying smart contracts. W ork o n o ther layers b uilds o n what w e a lready h ave towards full integration with t he Ethereum ecosystem.
WP1 (Network, Smart Contracts): P rototype decentralized broker n etwork
 Create f irst prototype version of t he d ecentralized b roker n ode  Integrate l ibp2p  secp256k1 E CDSA s igning a nd v erification  Event protocol  JSON a nd W ebsocket A PIs  Stream s mart c ontract  Stream registry smart c ontract  Network c ontroller smart c ontract  Partition assignment  Checksum r eporting  Flood p revention using publisher/subscriber f ees  Basic D ATAcoin reward scheme
The old "cloud" messaging l ayer and t he new decentralized network w ill c oexist s ide b y s ide for a w hile, u ntil t he d ecentralized b roker r eaches scale a nd stability. The e xisting production Engine a nd Editor w ill r un w ith t he o ld broker u ntil the n etwork layer i s u pgraded.
WP2 ( Marketplace): Barebones marketplace
 Discovery of p ublicly available d ata s treams, initial categorisation and search  Stream product i mplementation, buyable items w hich g rant access to a s et o f streams in
exchange for D ATAcoin  Users can define stream p roducts a nd offer them o n the m arketplace  Populate t he m arketplace with real-time d ata streams from d ifferent verticals s uch a s t he
following:  Financial m arket data: s tock p rices, o ption p rices, commodity p rices, cryptocurrency r ates, fiat e xchange rates, trading v olume, a nd c orporate actions.  Social media d ata: T witter, Instagram, F acebook, r eddit, f lickr, etc.  Transportation d ata: D epartures, a rrivals, geolocation, s peed, heading for airplanes, ships, trains, a nd l ocal t ransport.
22

 Weather data: Temperature, p recipitation, humidity, cloud cover, wind speed, both current and forecast.
 The first v ersion of the marketplace will h ave s ome c entralized "training w heels" t o simplify a ccess management a nd m irror the c entralized/decentralized of t he production network
WP3 (Engine): E ngine goes Ethereum
 Streamr-Web3 b ridge to s upport Ethereum i nteractions from Streamr  Smart contract deployment, ABI support f or p redeployed c ontracts  Local a nd transactional function calls  Event watching  Key a nd a ccount m anagement  Support for different t estnets and mainnet  Signatures a nd s ignature verification  Dockerizing t he Engine for Golem or other decentralized c omputing p rovider
WP4 (Editor): S eamless on-chain and off-chain c omputing
 Improving the visual editor to fully s upport all E thereum-related f eatures in the Engine  Integrated S olidity e ditor for w riting custom smart contract modules  A built-in selection of smart c ontract t emplates for t he most c ommon use cases
(payments, betting, SLA m onitoring, f orecasting, e tc.), and t he a bility to e asily apply real-world d ata streams to these templates.  Redoing t he U I/UX o f the editor a nd a ssociated web a pplication
5.2 M ilestone 2
In this m ilestone, w e l aunch t he f irst version o f t he D ata Marketplace, a long with t he f eatures i t needs i n the underlying N etwork layer.
WP5 ( Network, Smart C ontracts): S upport for data m onetization and e ncryption
 First s table version  Basic e ncryption s upport  Data l icense smart contract  Support s mart contracts as a  s ubscription target  Add s upport f or further data s igning methods, e .g. b ased on X .509, SGX  Basic s torage i n e ither d ecentralized b lock s torage or decentralized DB  Implement a nd u tilize k arma  Stress t esting, optimizing s calability
23

WP6 (Data M arket): C ompletely d ecentralized M arketplace
 "Training w heels" r emoved from t he initial marketplace implementation in M 1 to a chieve full decentralization, w ith d ata licenses m odeled a s s mart contracts o n the blockchain, and used f or p ermissioning and a ccess c ontrol
 Initial key d istribution mechanism to s upport p ermission-controlled stream c ontent o n public network
 Seller identity v erification  Seller reputation mechanism
WP7 ( Engine, E ditor): A chieving d ecentralization
 Migrate t o t he new N etwork l ayer  Deployment o n Golem or other container provider  Fault t olerance a nd failure r ecovery in d ecentralized environment
5.3 M ilestone 3
The goal of m ilestone 3 is t o r each t he f ull Streamr v ision. The R&D of milestone 3  i s bound t o change along t he w ay, as the previous m ilestones will s park various ideas and t he community will request new f eatures. Milestone 3  w ill also c ontain significant marketing efforts to d rive adoption of t he s tack.
WP8 (Network): Advanced r outing, location obfuscation
 Location o bfuscation  Multicast encryption  Stress t esting, optimizing s calability  Work o n a ny p roblems f ound in large-scale d eployments  Work o n f eatures requested by c ommunity  Work o n i ntegrations w ith e merging platforms
WP9 ( Data M arket): Community building
 Adding more data streams t o the Data M arket  Stream wishlist, bounty program t o a ccelerate adoption  Improvements to reputation mechanism  Increased community building e fforts
WP10 ( Engine, E ditor): P roductization
 Improving t he UI and U X of t he tools
24

 Onboarding, t utorial v ideos, h elp m aterials  Add integrations to r elevant platforms in b lockchain, IoT, AI, or other spaces
25

6. P roject m anagement team
Henri P ihkala, M.Sc
Henri is a software e ngineer, a serial entrepreneur, and e x algorithmic trader. H e has l ed the development o f two high-frequency algorithmic trading platforms and d esigned and managed building t he distributed Streamr c loud a nalytics platform. Henri is passionate a bout c omplex a rchitecture, scalability, u sability, a nd t he blockchain.
Risto K arjalainen, Ph.D.
Risto is a  d ata s cientist a nd finance professional w ith Ph.D. from the W harton S chool. H e's a quant w ith an international c areer i n automated, s ystematic t rading and i nstitutional a sset management. R isto's interests include real-time computing, machine learning, e volutionary algorithms, behavioural f inance, the b lockchain, and f intech i n general.
Nikke N ylund, B.Sc.
Nikke i s a former low l atency a lgorithmic t rading s trategist. He's got s ome 2 0 y ears of managerial and entrepreneurial experience as a  founder a nd/or serial investor i n I CT a nd t ech companies with s everal successful e xits under his belt. N ikke holds a B Sc i n Finance a nd E ntrepreneurship f rom the Helsinki School o f E conomics.
Michael Malka, M.Sc.
Michael is a n e ntrepreneur a nd t echnology enthusiast with 2 0 years of experience in different roles f rom s oftware d eveloper t o CEO. H e h as b een i nvolved in s oftware projects i n different sectors f rom startups t o banks and telcos. M ichael studied computer s cience i n the University of H elsinki before starting h is first s oftware company.
Advisors
TBA
26

7. C onclusion
This whitepaper outlines o ur v ision f or a r obust, n atively d ecentralized r eal-time data b ackbone for decentralized apps. We believe that t he combination of a r eal-time d ata market a nd the d ata pipeline w ill b e t ransformative f or Ethereum smart contract d evelopers and t he Ðapp ecosystem at l arge. O ur ambition is t o build a w ell thought-out and professionally i mplemented t echnology stack that s erves the f uture needs o f our audience, and provides u nstoppable data for unstoppable apps.
Our t echnology stack is l ayered a nd modular, a nd it is built o n a decentralized t ransport l ayer. There i s a peer-to-peer n etwork consisting o f incentivized broker n odes. T he n etwork h osts a publish/subscribe mechanism a nd supports decentralized s torage o f encrypted events. Throughput s cales l inearly w ith t he number o f p articipating n odes, a nd the n etwork c an p rocess millions of events p er second.
The d ata backbone i s a n ideal facilitator of t he M2M e conomy, w here a utonomous m achines, bots, and r obots b uy o r sell t iny pieces o f data. T he idea18 has b een raised that m achines will barter r esources such as storage, p rocessing capacity, communication b andwidth, etc. W e believe that u sing D ATAcoin leads t o much l ower t ransaction c osts than b artering.
Streamr is p art of t he c omputing revolution where m onolithic s olutions a re b eing s uperseded b y decentralized computing a lternatives. I n d istributed c omputing, Golem replaces Azure V irtual Machines. In block storage, IPFS, S torj, a nd o thers replace A zure Blob S torage. I n d ata p ipeline and m essaging, S treamr replaces centralized m essaging and event processing platforms such as Azure E ventHub a nd Azure S tream Analytics. There's a power transfer t aking p lace f rom corporations a nd e nterprises to i ndividual citizens, autonomous agents, a pps, a nd machines, leading to improved p rivacy, e fficiency, r esilience, and f ault t olerance, and ultimately h igher welfare f or t he g ood denizens of t he connected society.
18 Alex P uig: " How t he B lockchain c ould enable the M achine Economy (M2M)", 1 1 January, 2016 (https://www.linkedin.com/pulse/how-blockchain-could-enable-machine-economy-m2m-alex-puig)
27

